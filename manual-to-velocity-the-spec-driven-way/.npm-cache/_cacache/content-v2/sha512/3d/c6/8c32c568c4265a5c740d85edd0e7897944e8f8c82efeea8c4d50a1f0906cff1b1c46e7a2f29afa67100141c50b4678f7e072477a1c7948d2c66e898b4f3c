{"_id":"nanotar","_rev":"2-0f18d9d934acd1f284547baf489151e9","name":"nanotar","dist-tags":{"latest":"0.2.0"},"versions":{"0.0.0":{"name":"nanotar","version":"0.0.0","_id":"nanotar@0.0.0","maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"dist":{"shasum":"c8ebcc3c941d922e86dc708f0d80b3b6fa92fc9b","tarball":"https://registry.npmjs.org/nanotar/-/nanotar-0.0.0.tgz","fileCount":1,"integrity":"sha512-mf4bpZJUT9slpea4b54dme021/ksBc2ZVxRg4hR11M5HSP9Q+pIiOENdA1kSXUEwZ1Re09KCsvfHmLWrBRnRdQ==","signatures":[{"sig":"MEYCIQDxtTycmTQ0RoXwBYReloxyUCZVw1dWsKZSChUm6OyGAgIhAN6Sj5GzBJdQbIdEflzDcHehqZhnApdyK/iCy1oeeSzi","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":36},"_npmUser":{"name":"pi0","email":"pyapar@gmail.com"},"_npmVersion":"10.2.3","directories":{},"_nodeVersion":"20.10.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/nanotar_0.0.0_1702081069088_0.027933236612186274","host":"s3://npm-registry-packages"}},"0.1.1":{"name":"nanotar","version":"0.1.1","license":"MIT","_id":"nanotar@0.1.1","maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"homepage":"https://github.com/unjs/nanotar#readme","bugs":{"url":"https://github.com/unjs/nanotar/issues"},"dist":{"shasum":"24276a418130fa69f479577f343747e768810857","tarball":"https://registry.npmjs.org/nanotar/-/nanotar-0.1.1.tgz","fileCount":8,"integrity":"sha512-AiJsGsSF3O0havL1BydvI4+wR76sKT+okKRwWIaK96cZUnXqH0uNBOsHlbwZq3+m2BR1VKqHDVudl3gO4mYjpQ==","signatures":[{"sig":"MEUCIQCDtc1XqxRDWnPKov6i2Ti5itCDxYHvDk6wptPg+3opCwIgETuxRZuHWzQtt0erHcy75xOPyX3do4+ovuVN64WYM6U=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":24505},"main":"./dist/index.cjs","type":"module","types":"./dist/index.d.ts","module":"./dist/index.mjs","exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","require":"./dist/index.cjs"}},"gitHead":"c1247bdec97163b487c8ca55003e291dfea755ab","scripts":{"dev":"vitest dev","lint":"eslint --cache --ext .ts,.js,.mjs,.cjs . && prettier -c src test","play":"jiti playground","test":"pnpm lint && pnpm test:types && vitest run --coverage","build":"unbuild","prepack":"pnpm run build","release":"pnpm test && changelogen --release && npm publish && git push --follow-tags","lint:fix":"eslint --cache --ext .ts,.js,.mjs,.cjs . --fix && prettier -c src test -w","test:types":"tsc --noEmit --skipLibCheck"},"_npmUser":{"name":"pi0","email":"pyapar@gmail.com"},"repository":{"url":"git+https://github.com/unjs/nanotar.git","type":"git"},"_npmVersion":"10.2.3","description":"Tiny and fast Tar utils for any JavaScript runtime!","directories":{},"sideEffects":false,"_nodeVersion":"20.10.0","_hasShrinkwrap":false,"packageManager":"pnpm@8.11.0","devDependencies":{"jiti":"^1.21.0","eslint":"^8.55.0","vitest":"^1.0.1","unbuild":"^2.0.0","prettier":"^3.1.0","typescript":"^5.3.2","@types/node":"^20.10.3","changelogen":"^0.5.5","eslint-config-unjs":"^0.2.1","@vitest/coverage-v8":"^1.0.1"},"_npmOperationalInternal":{"tmp":"tmp/nanotar_0.1.1_1702081107066_0.797476986140577","host":"s3://npm-registry-packages"}},"0.2.0":{"name":"nanotar","version":"0.2.0","description":"Tiny and fast Tar utils for any JavaScript runtime!","repository":{"type":"git","url":"git+https://github.com/unjs/nanotar.git"},"license":"MIT","sideEffects":false,"type":"module","exports":{".":{"import":{"types":"./dist/index.d.mts","default":"./dist/index.mjs"},"require":{"types":"./dist/index.d.cts","default":"./dist/index.cjs"}}},"main":"./dist/index.cjs","module":"./dist/index.mjs","types":"./dist/index.d.ts","scripts":{"build":"unbuild","dev":"vitest dev","play":"jiti playground","lint":"eslint --cache . && prettier -c src test","lint:fix":"eslint --cache . --fix && prettier -c src test -w","prepack":"pnpm run build","release":"pnpm test && changelogen --release && npm publish && git push --follow-tags","test":"pnpm lint && pnpm test:types && vitest run --coverage","test:types":"tsc --noEmit --skipLibCheck"},"devDependencies":{"@types/node":"^22.10.7","@vitest/coverage-v8":"^3.0.2","changelogen":"^0.5.7","eslint":"^9.18.0","eslint-config-unjs":"^0.4.2","jiti":"^2.4.2","prettier":"^3.4.2","typescript":"^5.7.3","unbuild":"^3.3.1","vitest":"^3.0.2"},"packageManager":"pnpm@9.15.4","_id":"nanotar@0.2.0","gitHead":"7e35c5bd8d3f3b7565ba3aafa216eea636fc7b3c","bugs":{"url":"https://github.com/unjs/nanotar/issues"},"homepage":"https://github.com/unjs/nanotar#readme","_nodeVersion":"22.13.0","_npmVersion":"10.9.2","dist":{"integrity":"sha512-9ca1h0Xjvo9bEkE4UOxgAzLV0jHKe6LMaxo37ND2DAhhAtd0j8pR1Wxz+/goMrZO8AEZTWCmyaOsFI/W5AdpCQ==","shasum":"763afd4e41974d033011f588e9157dff726c296b","tarball":"https://registry.npmjs.org/nanotar/-/nanotar-0.2.0.tgz","fileCount":8,"unpackedSize":37466,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDfr41LFvg3ZygM0s4vbHgXiVwm/bV0bws+yYlcOuZ7vAiAc9biBjmu71v18xQgskEyu7ES74kr2c5ZGe0sz3DgItw=="}]},"_npmUser":{"name":"pi0","email":"pyapar@gmail.com"},"directories":{},"maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/nanotar_0.2.0_1737382772950_0.6474841428794089"},"_hasShrinkwrap":false}},"time":{"created":"2023-12-09T00:17:49.087Z","modified":"2025-01-20T14:19:33.324Z","0.0.0":"2023-12-09T00:17:49.245Z","0.1.1":"2023-12-09T00:18:27.234Z","0.2.0":"2025-01-20T14:19:33.138Z"},"bugs":{"url":"https://github.com/unjs/nanotar/issues"},"license":"MIT","homepage":"https://github.com/unjs/nanotar#readme","repository":{"type":"git","url":"git+https://github.com/unjs/nanotar.git"},"description":"Tiny and fast Tar utils for any JavaScript runtime!","maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"readme":"# üìº nanotar\n\n[![npm version][npm-version-src]][npm-version-href]\n[![bundle][bundle-src]][bundle-href]\n\n<!-- [![npm downloads][npm-downloads-src]][npm-downloads-href] -->\n<!-- [![Codecov][codecov-src]][codecov-href] -->\n\nTiny and fast [tar](<https://en.wikipedia.org/wiki/Tar_(computing)>) utils for any JavaScript runtime!\n\nüå≥ Tiny (~1KB minified + gzipped with all utils) and tree-shakable!\n\n‚ú® Written with modern TypeScript and ESM format\n\n‚úÖ Works in any JavaScript runtime Node.js (18+), Bun, Deno, Browsers, and Edge Workers\n\nüåê Web Standard Compatible\n\nüóúÔ∏è Built-in compression and decompression support\n\n## Installation\n\nInstall package:\n\n```sh\n# npm\nnpm install nanotar\n\n# yarn\nyarn add nanotar\n\n# pnpm\npnpm install nanotar\n\n# bun\nbun install nanotar\n```\n\nImport:\n\n```js\n// ESM\nimport {\n  createTar,\n  createTarGzip,\n  createTarGzipStream,\n  parseTar,\n  parseTarGzip,\n} from \"nanotar\";\n\n// CommonJS\nconst { createTar } = require(\"nanotar\");\n```\n\n## Creating a tar archive\n\nEasily create a new tar archive using the `createTar` utility.\n\nThe first argument is an array of files to archive:\n\n- `name` field is required and you can use `/` to specify files within sub-directories.\n- `data` field is optional for directories and can be either a [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String), [`ArrayBuffer`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer) or [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n- `attrs` field is optional for file attributes.\n\nThe second argument is for archive options. You can use `attrs` to set default attributes for all files (can still be overridden per file).\n\nPossible attributes are:\n\n- `mtime`: Last modification time. The default is `Date.now()`\n- `uid`: Owner user id. The default is `1000`\n- `gid`: Owner group id. The default is `1000`\n- `user`: Owner user name. The default is `\"\"`\n- `group`: Owner user group. The default is `\"\"`\n- `mode`: file mode (permissions). Default is `664` (`-rw-rw-r--`) for files and `775` (`-rwxrwxr-x`) for directories\n\n**Example:**\n\n```ts\nimport { createTar } from \"nanotar\";\n\nconst data = createTar(\n  [\n    { name: \"README.md\", data: \"# Hello World!\" },\n    { name: \"test\", attrs: { mode: \"777\", mtime: 0 } },\n    { name: \"src/index.js\", data: \"console.log('wow!')\" },\n  ],\n  { attrs: { user: \"js\", group: \"js\" } },\n);\n\n// Data is a Uint8Array view you can send or write to a file\n```\n\n### Compression\n\nYou can optionally use `createTarGzip` or `createTarGzipStream` to create a compressed tar data stream (returned value is a [`Promise<Uint8Array>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array) or [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream) piped to [`CompressionStream`](https://developer.mozilla.org/en-US/docs/Web/API/CompressionStream))\n\n```js\nimport { createTarGzip, createTarGzipStream } from \"nanotar\";\n\ncreateTarGzip([]); // Promise<Uint8Array>\n\ncreateTarGzipStream([]); // ReadableStream\n```\n\n## Parsing a tar archive\n\nEasily parse a tar archive using `parseTar` utility.\n\n**Example:**\n\n```ts\nimport { parseTar } from \"nanotar\";\n\n// Read tar data from file or other sources into an ArrayBuffer or Uint8Array\n\nconst files = parseTar(data);\n\n/**\n[\n  {\n    \"type\": \"file\",\n    \"name\": \"hello.txt\",\n    \"size\": 12,\n    \"data\": Uint8Array [ ... ],\n    \"text\": \"Hello World!\",\n    \"attrs\": {\n      \"gid\": 1750,\n      \"group\": \"\",\n      \"mode\": \"0000664\",\n      \"mtime\": 1702076997,\n      \"uid\": 1750,\n      \"user\": \"root\",\n    },\n  },\n  ...\n]\n */\n```\n\nParsed files array has two additional properties: `size` file size and `text`, a lazy getter that decodes `data` view as a string.\n\nYou can filter iterms to read using `filter` option:\n\n```ts\nconst files = parseTar(data, {\n  filter: (file) => file.name.starsWith(\"dir/\"),\n});\n```\n\nAdditionally, you can use `metaOnly` option to skip reading file data and listing purposes:\n\n```ts\nconst fileMetas = parseTar(data, {\n  metaOnly: true,\n});\n```\n\n### Decompression\n\nIf input is compressed, you can use `parseTarGzip` utility instead to parse it (it used [`DecompressionStream`](https://developer.mozilla.org/en-US/docs/Web/API/DecompressionStream) internally and return a `Promise<Uint8Array>` value)\n\n```js\nimport { parseTarGzip } from \"nanotar\";\n\nparseTarGzip(data); // Promise<Uint8Array>\n```\n\n## Development\n\n- Clone this repository\n- Install the latest LTS version of [Node.js](https://nodejs.org/en/)\n- Enable [Corepack](https://github.com/nodejs/corepack) using `corepack enable`\n- Install dependencies using `pnpm install`\n- Run interactive tests using `pnpm dev`\n\n## License\n\nMade with üíõ\n\nInspired by [ankitrohatgi/tarballjs](https://github.com/ankitrohatgi/tarballjs)\n\nPublished under the [MIT License](./LICENSE).\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/nanotar?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-version-href]: https://npmjs.com/package/nanotar\n[npm-downloads-src]: https://img.shields.io/npm/dm/nanotar?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-downloads-href]: https://npmjs.com/package/nanotar\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/nanotar/main?style=flat&colorA=18181B&colorB=F0DB4F\n[codecov-href]: https://codecov.io/gh/unjs/nanotar\n[bundle-src]: https://img.shields.io/bundlephobia/minzip/nanotar?style=flat&colorA=18181B&colorB=F0DB4F\n[bundle-href]: https://bundlephobia.com/result?p=nanotar\n","readmeFilename":"README.md"}